<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddMark" xml:space="preserve">
    <value>Add Grade</value>
  </data>
  <data name="AttestatRegion" xml:space="preserve">
    <value>Region (for Russian High School Diplomas)</value>
  </data>
  <data name="AttestatRegion_Message" xml:space="preserve">
    <value>Specify the number of the region</value>
  </data>
  <data name="AvgMark" xml:space="preserve">
    <value>Average Grade</value>
  </data>
  <data name="CountryEducId" xml:space="preserve">
    <value>Country of your previous education</value>
  </data>
  <data name="CurrentYear" xml:space="preserve">
    <value>2014 год</value>
  </data>
  <data name="DiplomNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="DiplomNumber_Message" xml:space="preserve">
    <value>Specify the document number</value>
  </data>
  <data name="DiplomSeries" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="DiplomSeries_Message" xml:space="preserve">
    <value>Specify the document series</value>
  </data>
  <data name="DiplomTheme" xml:space="preserve">
    <value>Diploma Thesis</value>
  </data>
  <data name="EducationDocumentHeader" xml:space="preserve">
    <value>Document of Education</value>
  </data>
  <data name="EducationHeader" xml:space="preserve">
    <value>Educational Data</value>
  </data>
  <data name="EducationInfo_SchoolExitYear_MessageFormat" xml:space="preserve">
    <value>Enter year in 4-digit format</value>
  </data>
  <data name="EducationInfo_SchoolName_Message" xml:space="preserve">
    <value>Enter name of educational institution</value>
  </data>
  <data name="EGEball" xml:space="preserve">
    <value>Score of Unified State Exam Grades</value>
  </data>
  <data name="EGEmarks" xml:space="preserve">
    <value>Unified State Exam Grades</value>
  </data>
  <data name="EGEnomarks" xml:space="preserve">
    <value>No Unified State Exam Grades</value>
  </data>
  <data name="EGEsert" xml:space="preserve">
    <value>Number of Unified State Exam Grades certificate</value>
  </data>
  <data name="EGEsubject" xml:space="preserve">
    <value>Subject (Unified State Exam Grades)</value>
  </data>
  <data name="EnglishMark" xml:space="preserve">
    <value>Final grade of English (if there are)</value>
  </data>
  <data name="EqualityDocumentNumber" xml:space="preserve">
    <value>Equality document number</value>
  </data>
  <data name="HasTRKI" xml:space="preserve">
    <value>I have the TORFL Certificate (ТРКИ)</value>
  </data>
  <data name="Header_CurrentEducation" xml:space="preserve">
    <value>Current Educational institution</value>
  </data>
  <data name="HEDataHeader" xml:space="preserve">
    <value>Higher Education Data</value>
  </data>
  <data name="HEEntryYear" xml:space="preserve">
    <value>Year of the beginning of study</value>
  </data>
  <data name="IsEqual" xml:space="preserve">
    <value>Have equality document</value>
  </data>
  <data name="LanguageId" xml:space="preserve">
    <value>Foreign languages</value>
  </data>
  <data name="PassInSPbSU" xml:space="preserve">
    <value>Сдаю в СПбГУ</value>
  </data>
  <data name="PersonQualification" xml:space="preserve">
    <value>Qualification</value>
  </data>
  <data name="PersonSpecialization" xml:space="preserve">
    <value>Field of Study</value>
  </data>
  <data name="PersonStudyForm" xml:space="preserve">
    <value>Form of Education</value>
  </data>
  <data name="RegionEducId" xml:space="preserve">
    <value>Select the region</value>
  </data>
  <data name="ResidentialPlace" xml:space="preserve">
    <value>Residential place</value>
  </data>
  <data name="SchoolExitClass" xml:space="preserve">
    <value>Graduate class</value>
  </data>
  <data name="SchoolExitYear" xml:space="preserve">
    <value>Graduating year</value>
  </data>
  <data name="SchoolExitYear_Message" xml:space="preserve">
    <value>Enter the year of graduation</value>
  </data>
  <data name="SchoolName" xml:space="preserve">
    <value>Name of Educational Institution</value>
  </data>
  <data name="SchoolNumber" xml:space="preserve">
    <value>Number of School</value>
  </data>
  <data name="SchoolTypeId" xml:space="preserve">
    <value>Level of education you have got</value>
  </data>
  <data name="SecondWave" xml:space="preserve">
    <value>Сдаю во "второй волне"</value>
  </data>
  <data name="TRKICertificateNumber" xml:space="preserve">
    <value>TORFL Certificate Number</value>
  </data>
  <data name="VuzAdditionalTypeId" xml:space="preserve">
    <value>Entry type</value>
  </data>
  <data name="EnglishNull" xml:space="preserve">
    <value>I would like to learn Enlish from "zero" level</value>
  </data>
  <data name="RedDiploma" xml:space="preserve">
    <value>Dimploma with distinction</value>
  </data>
  <data name="VuzExitYear" xml:space="preserve">
    <value>Expected year graduation</value>
  </data>
  <data name="SchoolCurName" xml:space="preserve">
    <value>Name of current Educational Institution</value>
  </data>
  <data name="CountryCurEducId" xml:space="preserve">
    <value>Country of your current education</value>
  </data>
  <data name="AccreditationDate" xml:space="preserve">
    <value>Date of accreditation</value>
  </data>
  <data name="AccreditationNumber" xml:space="preserve">
    <value>Number of accreditation</value>
  </data>
  <data name="CurrentLicenceProgram" xml:space="preserve">
    <value>Current study area</value>
  </data>
  <data name="CurrentObrazProgram" xml:space="preserve">
    <value>Current educational program</value>
  </data>
  <data name="CurrentProfile" xml:space="preserve">
    <value>Current profile</value>
  </data>
  <data name="DisorderInfo" xml:space="preserve">
    <value>Information about expulsion</value>
  </data>
  <data name="HasAccreditation" xml:space="preserve">
    <value>Has accreditation</value>
  </data>
  <data name="HasScholarship" xml:space="preserve">
    <value>Has academic scholarship</value>
  </data>
  <data name="ObrazProgramName" xml:space="preserve">
    <value>Education program</value>
  </data>
  <data name="PersonStudyBasis" xml:space="preserve">
    <value>Basis of Education</value>
  </data>
  <data name="PersonStudyLevel" xml:space="preserve">
    <value>Degree</value>
  </data>
  <data name="PersonStudySemester" xml:space="preserve">
    <value>Semester</value>
  </data>
  <data name="RecoverForIGA" xml:space="preserve">
    <value>Recover for final academic assessment</value>
  </data>
  <data name="ChangeStudyFormReason" xml:space="preserve">
    <value>The reason for changing basis of study</value>
  </data>
</root>